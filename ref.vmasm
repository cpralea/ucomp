$sys_enter:
    jmp $sys_enter
main:
    mov r0, 5
    push r0
    call factorial
    pop r0
    mov r0, 0
    push r0
    call $sys_enter
factorial:
    mov r0, sp
    add r0, 4
    load r1, [r0]
    cmp r1, 1
    jmpgt .l1
    mov r1, 1
    store [r0], r1
    ret
.l1:
    mov r2, r1
    sub r2, 1
    push r0
    push r1
    push r2
    call factorial
    pop r2
    pop r1
    pop r0
    push r0
    push r1
    push r2
    call multiply
    pop r1
    pop r0
    sub r0, 4
    load r2, [r0]
    add r0, 0
    store [r0], r2
    add r0, 4
    store [r0], r1
    ret
multiply:
    mov r0, sp
    add r0, 4
    load r3, [r0]
    add r0, 4
    load r2, [r0]
    mov r1, 0
.l1:
    cmp r3, 0
    jmpz .l2
    add r1, r2
    sub r3, 1
    jmp .l1
.l2:
    sub r0, 8
    load r2, [r0]
    add r0, 4
    store [r0], r2
    add r0, 4
    store [r0], r1
    ret
